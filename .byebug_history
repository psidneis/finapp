c
self.card.installments
self.card
self
c
Installment.all
self.card.installments
self.card
c
self.card.installments
self.card
self
Installment.first
Installment
self
c
self.card.installments
self
self.card
self
c
Card.first
Card.all
Card.find 6
self
self.card
self
c
invoice.class
invoice
invoice.installments
invoice
c
invoice_period
n
(self.payment_day - (1.month - 1.day)).beginning_of_day..self.payment_day
self
c
self.card.installments.where(date: invoice_period).count
self.card.installments.where(date: invoice_period)
invoice_period =  (self.payment_day - (1.month - 1.day)).beginning_of_day..self.payment_day
(self.payment_day - (1.month - 1.day)).beginning_of_day..self.payment_day
(self.payment_day - (1.month - 1.day)).beginning_of_day
(self.payment_day - (1.month - 1.day))
self.payment_day - (1.month - 1.day)
(self.payment_day - (1.month - 1.day)
 (self.payment_day - (1.month - 1.day).beginning_of_day)
(self.payment_day - (1.month - 1.day).beginning_of_day)..self.payment_day
(self.payment_day - (1.month - 1.day).beginning_of_day)..self.payment_day)
(self.payment_day - (1.month - 1.day).beginning_of_day..self.payment_day)
(self.payment_day - (1.month - 1.day)..self.payment_day)
(self.payment_day - (1.month - 1.day)..self.payment_day).beginning_of_day
self.payment_day..(self.payment_day - (1.month - 1.day)).beginning_of_day
self.payment_day..(self.payment_day - (1.month + 1.day)).beginning_of_day
self.payment_day..(self.payment_day - 1.month + 1.day).beginning_of_day
self.payment_day..(self.payment_day - 1.month - 1.day).beginning_of_day
self.payment_day..(self.payment_day - 1.month).beginning_of_day
(self.payment_day - 1.month).beginning_of_day
self.payment_day - 1.month
self.payment_day
self.card.installments.where(date: (self.payment_day..(self.payment_day - 1.month)))
(self.payment_day - (1.month - 1.day)).beginning_of_day
self.payment_day - (1.month - 1.day).beginning_of_day
self.payment_day - (1.month - 1.day)
self.payment_day - (1.month + 1.day)
self.payment_day - 1.month
self.payment_day
self.payment_day.day
self.payment_day.month
parcela.date.month
parcela
self.payment_day
self.payment_day.day
parcela.date.day
installment.date.day
self.payment_day.month
parcela.date.month
parcela.date
parcela.date_month
parcela = installments.first
i = installments.first
installments.first
i = installments.first
installments.count
installments
n
self.payment_day
self.payment
installments = self.card.installments.where("date < ?", self.payment_day).count
installments = self.card.installments.where("date < ?", self.payment_day)
self.card.installments.count
self.card.installments
self.card
self
c
@invoice
@invoice.count
@invoice.installments
@invoice
installments
n
@invoice
installment
c
@installment
n
@installment
n
c
old_installment.value
n
old_installment
old_instalment
installment
@old_installment
c
@installment.installmentable
@installment
n
c
invoice
n
old_installment.value
old_installment
action_name
n
c
n
old_installment.value
old_installment
n
action_name
self.current_invoice
current_invoice
n
installment.expense?
c
current_invoice.count
current_invoice
n
params
action_name
installment.expense?
installment.expense
installment
n
c
n
params
c
cc
account.total_value_by_period(end_date).to_s
c
account.total_value_by_period(end_date).to_s
n
account.total_value_by_period(end_date).to_s
n
account.total_value_by_period(end_date).to_s
n
account.total_value_by_period(end_date).to_s
n
account.total_value_by_period(end_date).to_s
account.total_value_by_period(end_date)
total_value
account
c
Account.sum_of_values_by_period(@accounts, @end_date)
@end_date
@accounts
@account
Account.sum_of_values_by_period(@accounts, @end_date)
c
Account.sum_of_values(@accounts).to_s
Account.sum_of_values(@accounts)
c
params
c
request.format
params
c
request.format
c
params
c
request.format
c
request.format
c
@account
n
c
@account
n
c
params
c
params[:account][:modal]
params[:account]
params
c
params[:account][:modal].present?
c
params[:account][:modal].present?
params[:account][:modal]
params[:account]
params
account_params
params
params[:modal].present?
c
n
@account
n
params
c
n
params
c
params
c
params
c
invoice.value += installment.value
installment.value
invoice.value
invoice
c
invoice.payment_day
invoice
c
nc
c
n
c
n
c
n
current_invoice.present?
current_invoice
c
n
cn
invo
invo = self.invoices.build
in = self.invoices.build
i = self.invoices.build
self.invoices.build
self.invoices
self
i
i = self.invoices.new
i = self.invoices.create
i = self.invoices.build
self.current_invoice.present?
self.current_invoice.present
self.current_invoice.count
